// –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–¥–æ–±–∞–≤—å—Ç–µ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)
const products = {
  drinks: [
    // –ù–∞–ø–∏—Ç–∫–∏ –∏–∑ –≤–∞—à–µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    "LitEnergy", "–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω", "–ê—Å–∫–∞–Ω–∏—è", "–ë—ë—Ä–Ω", "–í–æ–¥–∞", "–ì–æ—Ä–∏–ª–ª–∞",
    "–î—Ä–∞–π–≤", "–ö–æ–ª–∞ 0,3–ª", "–ö–æ–ª–∞ 1–ª", "–õ–∞–π–º–æ–Ω", "–õ–∏–ø—Ç–æ–Ω 0,5–ª", "–õ–∏–ø—Ç–æ–Ω 1–ª",
    "–ú–æ—Ä—Å", "–ü–∞–ª–ø–∏", "–†–µ–¥–ë—É–ª–ª", "–°–æ–∫ 0,2–ª", "–°–æ–∫ 0,3–ª", "–°–ø—Ä–∞–π—Ç", "–¢–æ—Ä–Ω–∞–¥–æ", "–§–∞–Ω—Ç–∞"
  ],
  snacks: [
    // –°–Ω–µ–∫–∏ –∏–∑ –≤–∞—à–µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    "–°–Ω–∏–∫–µ—Ä—Å", "–°—É—Ö–∞—Ä–∏–∫–∏", "–¢–≤–∏–∫—Å", "–¢—É–∫ –∫—Ä–µ–∫–µ—Ä", "–ß–µ–±—É–ø–µ–ª–∏"
  ]
};

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
function generateInputFields() {
  const drinksContainer = document.getElementById('drinks');
  const snacksContainer = document.getElementById('snacks');

  products.drinks.forEach(product => {
    const div = document.createElement('div');
    div.className = 'product';
    div.innerHTML = `<label>${product}:</label><input type="number" id="${product}" min="0">`;
    drinksContainer.appendChild(div);
  });

  products.snacks.forEach(product => {
    const div = document.createElement('div');
    div.className = 'product';
    div.innerHTML = `<label>${product}:</label><input type="number" id="${product}" min="0">`;
    snacksContainer.appendChild(div);
  });
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –≤ localStorage
function saveReportLocally() {
  const report = [];
  [...document.querySelectorAll('input[type="number"]')].forEach(input => {
    report.push([input.id, input.value]);
  });
  localStorage.setItem('lastReport', JSON.stringify(report));
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç—á–µ—Ç–∞ –∏–∑ localStorage
function loadLastReport() {
  const lastReport = localStorage.getItem('lastReport');
  if (lastReport) {
    const lines = JSON.parse(lastReport);
    lines.forEach(([product, value]) => {
      const input = document.getElementById(product);
      if (input) input.value = value;
    });
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞
function sendReport() {
  const cash = document.getElementById('cash').value || 0;

  // –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
  let reportText = "üìä –û—Ç—á—ë—Ç:\n\n";

  // –ù–∞–ø–∏—Ç–∫–∏
  const drinkLines = products.drinks
    .map(product => {
      const value = document.getElementById(product).value || 0;
      return value > 0 ? `‚Ä¢ ${product}: ${value} —à—Ç` : null;
    })
    .filter(Boolean);

  if (drinkLines.length > 0) {
    reportText += "ü•§ –ù–∞–ø–∏—Ç–∫–∏:\n" + drinkLines.join('\n') + '\n';
  }

  // –°–Ω–µ–∫–∏
  const snackLines = products.snacks
    .map(product => {
      const value = document.getElementById(product).value || 0;
      return value > 0 ? `‚Ä¢ ${product}: ${value} —à—Ç` : null;
    })
    .filter(Boolean);

  if (snackLines.length > 0) {
    reportText += "\nüç´ –°–Ω–µ–∫–∏:\n" + snackLines.join('\n') + '\n';
  }

  // –ö–∞—Å—Å–∞
  if (cash > 0) {
    reportText += `\nüí∞ –ö–∞—Å—Å–∞: ${cash} —Ä—É–±`;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø—É—Å—Ç–æ–π –ª–∏ –æ—Ç—á–µ—Ç
  if (reportText.trim() === "üìä –û—Ç—á—ë—Ç:") {
    alert("–û—à–∏–±–∫–∞: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ø–æ–ª–µ.");
    return;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ Telegram ID
  const telegram = window.Telegram.WebApp;
  const telegram_id = telegram.initDataUnsafe?.user?.id;

  if (!telegram_id) {
    alert("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û—Ç–∫—Ä–æ–π—Ç–µ WebApp —á–µ—Ä–µ–∑ Telegram.");
    return;
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  const SERVER_URL = 'https://inventory-report-server.onrender.com '; // ‚Üê –£–∫–∞–∂–∏—Ç–µ –≤–∞—à URL
  fetch(`${SERVER_URL}/send`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ telegram_id, report_text: reportText })
  })
    .then(response => {
      if (response.ok) {
        console.log('–û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
        alert('–û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
      } else {
        return response.json().then(data => {
          alert(`–û—à–∏–±–∫–∞: ${data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
        });
      }
    })
    .catch(error => {
      console.error('Network error:', error);
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
    });

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
  saveReportLocally();
}